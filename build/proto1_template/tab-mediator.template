import AbstractMediator from "@/core/abstract/AbstractMediator";
import { EventType, HttpType } from "@/views/${moduleName}/setting";
import ${ClassName}Proxy from "../proxy/${ClassName}Proxy";
import { getProxy } from "@/views/_user_detail/PageSetting";

export default class ${ClassName}Mediator extends AbstractMediator {
    private myProxy: ${ClassName}Proxy = <any>getProxy(${ClassName}Proxy);
    private pageSetting;

    onRegister() {
        this.myProxy.enter();
    }

    onRemove() {
        this.myProxy.leave();
    }

    listNotificationInterests(): string[] {
        return [
${listNotificationInterests}
        ];
    }

    handleNotification(notification: puremvc.INotification) {
        const body = notification.getBody();
        switch (notification.getName()) {
${handleNotification}
        }
    }
}
